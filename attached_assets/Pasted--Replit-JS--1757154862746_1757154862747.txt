Привет, напиши подробное ТЗ для Replit. Мне нужно простое приложение на JS со сборкой, которое получит от меня ссылку на задачу (issue) в JIRA, получит её поля через API и заведёт несколько связанных задач на основании описания и декомпозиции.

# Описание работы

1) Предлагаем пользователю ввести ключ задачи (PORTFOLIO-987654321) или ссылку на неё (https://jira.hh.ru/browse/PORTFOLIO-987654321?param=1) из ссылки получаем key.

2) Делаем запрос через JIRA API за полями этой задачи. На экране всегда должна быть кнопка обновления: если в задаче что-то изменилось, по этой кнопке сбрасываем всё, снова скачиваем поля и начинаем сначала.

3) Получаем текст из поля customfield_36836 («Декомпозиция»), там будет декомпозиция задачи (текст в JIRA-разметке). Если его нет, сообщаем пользователю, что нужно заполнить поле «Декомпозиция» и показываем короткий пример.

4) Текст декомпозиции с помощью LLM делим на блоки двух типов: просто текст (или заголовок с текстом) и потенциальная задача. Разделитель блоков — название задачи, оно включается в текст следующего за ним блока.

Текст никак не меняем, ничего не должно потеряться. ВАЖНО: если объединить все блоки последовательно, получится исходный текст с точностью до символа.

5) Выводим суммарную оценку задач в «майках» и стори-поинтах (пример: 2XS + S + M = 3 SP), суммарные риски также в майках и SP.

Показываем поле дополнительных рисков в SP, предлагаем по дефолту 20% от общей оценки с округлением до 0.5, пользователь может поменять по своему усмотрению.

По полученной суммарной оценке с рисками показываем ориентировочную дату поставки, считая 1 SP = 2 рабочих дня (выходные не учитываем).

6) Показываем кнопку «Завести задачи». По нажатию создаём для каждой выделенной задачи issue в JIRA в проекте HH с полями summary (тут репозиторий и название, например «[xhh] Сайдбар»), description (полное описание задачи с разметкой), customfield_23911 (оценка в майках, текст, варианты: пусто, XS, S, M) и customfield_11212 (story points, число, варианты: пусто, 0.5, 1, 2). Связываем все задачи с исходной задачей связью "includes".

При ошибках показываем, что произошло.
При успехе показываем список заведённых задач в виде ссылок, сообщаем что всё готово.


# Получение данных из текста

Названия задач обычно в таком формате: "S [xhh] Сайдбар" ("<оценка в майках> [репозиторий] Название задачи"). Оценки может не быть, репозиторий и название — обязательные условия, их не разделяем, считаем одним названием.

У каждой задачи задачи есть оценка и риск. По умолчанию риск = 0.
Оценки «в майках» используются как замена стори-поинтам (SP), сопоставляем так:
- XS = 0.5 SP
- S = 1 SP
- M = 2 SP

Оценка может быть комбинированная, например M+S, S+XS, или просто c плюсом, например М+, это значит, что на эту задачу нужно заложить риски:
- M+, M+S: оценка M, риск S
- S+, S+XS: оценка S, риск XS
Маппинг оценок должен конфигурироваться, например, JSON-файлом.

Описанием задачи считаем всё что между названием задачи и следующей задачей либо итоговой оценкой.


# Пример разделения текста на блоки

Текст в поле «Декомпозиция»:
```
Декомпозиция фронта, бэк в PORTFOLIO-23452342.
h2. Вопросы
h2. Общее описание/логика работы

Основное:

делаем  редизайн вкладки, по макетам. На вкладке  обновляется структура: описательный блок, блок с выбором региона, блок с пруфами (циферки) выбор покупки доступа или бандла, сбоку появляется система баннеров

h2. M [?] Модал регионов — [база|https://example.com]

- Высота модала фиксирована (как начальная либо максимальная)
- Шапка
- Поле поиска
- Блок «Выбрано» пропадает, если выбран один из чипсов
- Блок чипсов (recommended)
- Кнопка + запрос на изменение региона

 ** {{GET /api/adapter/price/price-region/resume-statistic}}
 ** Формат ответа:
{code:json}
[
  {
    "priceRegionId": "1001",
    "resumeTotalCount": 10000,
    "resumeLastMonthInc": 2000
  },
  {...}
]
{code}

Обратить внимание:
- При переходах внутри модала меняется шапка, контент и кнопки

*S+ [xhh] Сайдбар*

- Баннер «[Дополняют и усиливают|https://www.figma.com/design/2W7LO5Mv14rlKsNRm3tgWA/%F0%9F%9F%A2-%C2%B7-%D1%80%D0%B5%D0%B4%D0%B8%D0%B7%D0%B0%D0%B9%D0%BD-%D0%B4%D0%BE%D1%81%D1%82%D1%83%D0%BF%D0%BE%D0%B2-%D0%BA-%D0%B1%D0%B0%D0%B7%D0%B5-%C2%B7-19-992?node-id=4282-24267&m=dev]» — Card без полей + 3 Cell внутри с реакцией на наведение
-- 66% с бэка не придёт, хардкодим на фронте.
-- (?) [product] Что будет на страновых сайтах?
- Баннер «Расширьте область доступа»: https://www.figma.com/design/2W7LO5Mv14rlKsNRm3tgWA/%F0%9F%9F%A2-%C2%B7-%D1%80%D0%B5%D0%B4%D0%B8%D0%B7%D0%B0%D0%B9%D0%BD-%D0%B4%D0%BE%D1%81%D1%82%D1%83%D0%BF%D0%BE%D0%B2-%D0%BA-%D0%B1%D0%B0%D0%B7%D0%B5-%C2%B7-19-992?node-id=4552-33320&m=dev]» справа — кастом
-- (!) В переводе зашито про федеральный округ, но ведём когда бэк присылает suggestedParentRegion, может разъехаться


h2. Кастомные компоненты

h3. Разделённая карточка

- Много использований, надо делать
- По сути это Card, в котором два Cell и Divider, все отступы делает Cell
- [Верхняя часть реагирует на наведение|https://www.figma.com/design/2W7LO5Mv14rlKsNRm3tgWA/%F0%9F%9F%A2-%C2%B7-%D1%80%D0%B5%D0%B4%D0%B8%D0%B7%D0%B0%D0%B9%D0%BD-%D0%B4%D0%BE%D1%81%D1%82%D1%83%D0%BF%D0%BE%D0%B2-%D0%BA-%D0%B1%D0%B0%D0%B7%D0%B5-%C2%B7-19-992?node-id=4373-29957&m=dev]

Оценка:
```

1) Текст
```
Декомпозиция фронта, бэк в PORTFOLIO-23452342.
h2. Вопросы
h2. Общее описание/логика работы

Основное:

делаем  редизайн вкладки, по макетам. На вкладке  обновляется структура: описательный блок, блок с выбором региона, блок с пруфами (циферки) выбор покупки доступа или бандла, сбоку появляется система баннеров
```

2) Задача: оценка "M", риск null, название "[?] Модал регионов — база" (из названия вырезаем разметку)
```
h2. M [?] Модал регионов — [база|https://example.com]

- Высота модала фиксирована (как начальная либо максимальная)
- Шапка
- Поле поиска
- Блок «Выбрано» пропадает, если выбран один из чипсов
- Блок чипсов (recommended)
- Кнопка + запрос на изменение региона

 ** {{GET /api/adapter/price/price-region/resume-statistic}}
 ** Формат ответа:
{code:json}
[
  {
    "priceRegionId": "1001",
    "resumeTotalCount": 10000,
    "resumeLastMonthInc": 2000
  },
  {...}
]
{code}

Обратить внимание:
- При переходах внутри модала меняется шапка, контент и кнопки
```

3) Задача: оценка "S", риск "XS", название "[xhh] Сайдбар" ===
```
*S+ [xhh] Сайдбар*

- Баннер «[Дополняют и усиливают|https://www.figma.com/design/2W7LO5Mv14rlKsNRm3tgWA/%F0%9F%9F%A2-%C2%B7-%D1%80%D0%B5%D0%B4%D0%B8%D0%B7%D0%B0%D0%B9%D0%BD-%D0%B4%D0%BE%D1%81%D1%82%D1%83%D0%BF%D0%BE%D0%B2-%D0%BA-%D0%B1%D0%B0%D0%B7%D0%B5-%C2%B7-19-992?node-id=4282-24267&m=dev]» — Card без полей + 3 Cell внутри с реакцией на наведение
-- 66% с бэка не придёт, хардкодим на фронте.
-- (?) [product] Что будет на страновых сайтах?
- Баннер «Расширьте область доступа»: https://www.figma.com/design/2W7LO5Mv14rlKsNRm3tgWA/%F0%9F%9F%A2-%C2%B7-%D1%80%D0%B5%D0%B4%D0%B8%D0%B7%D0%B0%D0%B9%D0%BD-%D0%B4%D0%BE%D1%81%D1%82%D1%83%D0%BF%D0%BE%D0%B2-%D0%BA-%D0%B1%D0%B0%D0%B7%D0%B5-%C2%B7-19-992?node-id=4552-33320&m=dev]» справа — кастом
-- (!) В переводе зашито про федеральный округ, но ведём когда бэк присылает suggestedParentRegion, может разъехаться
```

4) Текст
```
h2. Кастомные компоненты

h3. Разделённая карточка

- Много использований, надо делать
- По сути это Card, в котором два Cell и Divider, все отступы делает Cell
- [Верхняя часть реагирует на наведение|https://www.figma.com/design/2W7LO5Mv14rlKsNRm3tgWA/%F0%9F%9F%A2-%C2%B7-%D1%80%D0%B5%D0%B4%D0%B8%D0%B7%D0%B0%D0%B9%D0%BD-%D0%B4%D0%BE%D1%81%D1%82%D1%83%D0%BF%D0%BE%D0%B2-%D0%BA-%D0%B1%D0%B0%D0%B7%D0%B5-%C2%B7-19-992?node-id=4373-29957&m=dev]

Оценка:
```


# Технические требования

- TypeScript + React 18 Strict Mode + Redux Toolkit если надо
- Именованные экспорты (всегда `export const name` или `export { name }`)
- Абсолютные импорты (всегда `import {  } from 'src/path/to/module';`)
- CSS Modules с локальным импортом (`import styles from './styles'` + `className={styles.fooBar}`)
- Сборка на RSBuild, dev mode
- Yarn 4 + PNP, коммитим cache
- Тесты не нужны
- ESLint пока не нужен, но нужен Prettier и editorconfig
- JIRA_HOST, JIRA_TOKEN, JIRA_USER, OPENAI_HOST и OPENAI_TOKEN храним в .env под gitignore
- Все запросы в JIRA и LLM делаем с бэкенда, понятно сообщаем об ошибках
- Для запросов в LLM используем OpenAI-совместимый формат API хост и токен берём из `.env`
- Фреймворк для бэкенда Next.js, codestyle тот же для что фронтенда.
- Всё должно быть упаковано в докер-контейнеры для удобного запуска и деплоя.
- Конфиги подключаются в volume.
- Подробные инструкции по запуску в README

## Конфиг Prettier

```
{
  singleQuote: true,
  trailingComma: 'es5',
  arrowParens: 'always',
  printWidth: 120,
  tabWidth: 4,
  semi: true,
  overrides: [{
    files: ['*.json'],
    options: {
      tabWidth: 2
    }
  }]
}
```

## editorconfig

```
root = true

[*]
charset = utf-8
end_of_line = lf
insert_final_newline = true
trim_trailing_whitespace = true
indent_style = space
indent_size = 4

[package.json]
indent_size = 2
```


# Запросы в JIRA

Например, у меня есть задача PORTFOLIO-987654321.

Получить поля issue:
```bash
curl -X GET -u "$JIRA_USER:$JIRA_TOKEN" "https://jira.hh.ru/rest/api/2/issue/PORTFOLIO-987654321?fields=summary,description,customfield_36836,customfield_24213"
```
Пример ответа:
```
{
  "expand": "renderedFields,names,schema,operations,editmeta,changelog,versionedRepresentations",
  "id": "98765",
  "self": "https://jira.hh.ru/rest/api/2/issue/123123123",
  "key": "PORTFOLIO-987654321",
  "fields": {
    "summary": "Название задачи",
    "description": "Описание задачи",
    "customfield_36836": "Декомпозиция задачи",
    "customfield_24213": "Ссылки на макеты"
  }
}
```

Создать новую задачу:
```bash
curl -u "$JIRA_USER:$JIRA_TOKEN" -X POST -H "Content-Type: application/json" -d '{
  "fields": {
    "project": {"key": "HH"},
    "issuetype": {"id": "3"},
    "summary": "Заголовок задачи",
    "description": "Описание задачи"
  }
}' "https://jira.hh.ru/rest/api/2/issue"
```
Пример ответа:
```json
{"id":"9873565423","key":"HH-987654321","self":"https://jira.hh.ru/rest/api/2/issue/9873565423"}
```

Так делается связь PORTFOLIO-987654321 includes HH-987654321
```bash
curl -u "$JIRA_USER:$JIRA_TOKEN" -X POST -H "Content-Type: application/json" -d '{
  "type": {"name": "Inclusion"},
  "inwardIssue": {"key": "PORTFOLIO-12345"},
  "outwardIssue": {"key": "HH-987654321"}
}' \
"https://jira.hh.ru/rest/api/2/issueLink"
```

# План работы

Сначала делаем подробный план с максимумом технических деталей.

Если что-то непонятно — спрашивай, не придумывай.
